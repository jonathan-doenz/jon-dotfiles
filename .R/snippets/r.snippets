snippet lib
	library(${1:package})

snippet req
	require(${1:package})

snippet src
	source("${1:file.R}")

snippet ret
	return(${1:code})

snippet mat
	matrix(${1:data}, nrow = ${2:rows}, ncol = ${3:cols})

snippet sg
	setGeneric("${1:generic}", function(${2:x, ...}) {
		standardGeneric("${1:generic}")
	})

snippet sm
	setMethod("${1:generic}", ${2:class}, function(${2:x, ...}) {
		${0}
	})

snippet sc
	setClass("${1:Class}", slots = c(${2:name = "type"}))

snippet if
	if (${1:condition}) {
		${0}
	}

snippet el
	else {
		${0}
	}

snippet ei
	else if (${1:condition}) {
		${0}
	}

snippet fun
	${1:name} <- function(${2:variables}) {
		${0}
	}

snippet for
	for (${1:variable} in ${2:vector}) {
		${0}
	}

snippet while
	while (${1:condition}) {
		${0}
	}

snippet switch
	switch (${1:object},
		${2:case} = ${3:action}
	)

snippet apply
	apply(${1:array}, ${2:margin}, ${3:...})

snippet lapply
	lapply(${1:list}, ${2:function})

snippet sapply
	sapply(${1:list}, ${2:function})

snippet mapply
	mapply(${1:function}, ${2:...})

snippet tapply
	tapply(${1:vector}, ${2:index}, ${3:function})

snippet vapply
	vapply(${1:list}, ${2:function}, FUN.VALUE = ${3:type}, ${4:...})

snippet rapply
	rapply(${1:list}, ${2:function})

snippet ts
	`r paste("#", date(), "------------------------------\n")`

snippet shinyapp
	library(shiny)
	
	ui <- fluidPage(
	  ${0}
	)
	
	server <- function(input, output, session) {
	  
	}
	
	shinyApp(ui, server)

# plot functions
snippet pl
	plot(${1:x}, ${0:y})
	
snippet ggp
	ggplot(${1:data}, aes(${0:aesthetics}))
	
snippet img 
	${1:(jpeg,bmp,png,tiff)}(filename = '${2:filename}', width =  >         ${3}, height = ${4}, unit = '${5}')
	${0:plot}
	dev.off()

# plyr functions
snippet dd
	ddply(${1:frame}, ${2:variables}, ${0:function})
snippet dl
	dlply(${1:frame}, ${2:variables}, ${0:function})
snippet da
	daply(${1:frame}, ${2:variables}, ${0:function})
snippet d_
	d_ply(${1:frame}, ${2:variables}, ${0:function})

snippet ad
	adply(${1:array}, ${2:margin}, ${0:function})
snippet al
	alply(${1:array}, ${2:margin}, ${0:function})
snippet aa
	aaply(${1:array}, ${2:margin}, ${0:function})
snippet a_
	a_ply(${1:array}, ${2:margin}, ${0:function})

snippet ld
	ldply(${1:list}, ${0:function})
snippet ll
	llply(${1:list}, ${0:function})
snippet la
	laply(${1:list}, ${0:function})
snippet l_
	l_ply(${1:list}, ${0:function})

snippet md
	mdply(${1:matrix}, ${0:function})
snippet ml
	mlply(${1:matrix}, ${0:function})
snippet ma
	maply(${1:matrix}, ${0:function})
snippet m_
	m_ply(${1:matrix}, ${0:function})

# statistical test functions
snippet fis
	fisher.test(${1:x}, ${0:y})
snippet chi
	chisq.test(${1:x}, ${0:y})
snippet tt
	t.test(${1:x}, ${0:y})
snippet wil
	wilcox.test(${1:x}, ${0:y})
snippet cor
	cor.test(${1:x}, ${0:y})
snippet fte
	var.test(${1:x}, ${0:y})
snippet kvt
	kv.test(${1:x}, ${0:y})
